version: 2.1

orbs:
    browser-tools: circleci/browser-tools@1.0.1

executors:
  snovault-executor:
    docker:
      - image: circleci/buildpack-deps:focal
    working_directory: ~/snovault
    environment:
      - BASH_ENV: /home/circleci/.bashrc
      - JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      - ES_JAVA_OPTS: -Xms2g -Xmx2g
      - ES_BIN: /usr/share/elasticsearch/bin
      - ES_MAJOR_VERSION: 5
      - PG_VERSION: 11
      - NODE_VERSION: 10

commands:
  buildout:
    description: A buildout process based on snovault-executor
    steps:
      - checkout
      # Do not use caching for now to avoid potential conflicts/bugs
      - run:
          name: Add apt repositories
          command: |
            sudo apt-get update && sudo apt-get install apt-transport-https software-properties-common
            curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
            curl -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | sudo -E bash -
            sudo add-apt-repository -y ppa:openjdk-r/ppa
            sudo apt-add-repository -y ppa:brightbox/ruby-ng
            # need to add to make installation work on focal 
            sudo wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/pg_gpg_key
            sudo apt-key add /etc/apt/pg_gpg_key
            echo "deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" | sudo tee -a /etc/apt/sources.list
            sudo apt-get update
      - run:
          name: Install dependencies
          command: |
            PG_BIN="/usr/lib/postgresql/${PG_VERSION}/bin"
            sudo apt-get install -y \
              libarchive-tools \
              graphviz \
              nodejs \
              openjdk-11-jdk \
              postgresql-${PG_VERSION} \
              ruby2.7 \
              ruby2.7-dev \
              redis-server
            sudo apt-get install -y python3-dev python3-pip
            sed -i "1s;^;export PATH=${ES_BIN}:${PG_BIN}:$PATH\n;" $BASH_ENV
            sed -i '1s;^;alias python=python3\n;' $BASH_ENV
            sudo gem install compass
            wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.16.deb
            sudo dpkg -i elasticsearch-5.6.16.deb
            sudo apt-get install -f
            sudo chown -R circleci /etc/elasticsearch
      - run:
          name: Run buildout
          command: |
            sudo pip3 install --upgrade pip setuptools==51.3.3
            pip3 install -e '.[dev]'
            buildout
jobs:
  npm-non-bdd-tests:
    executor: snovault-executor
    # indexing tests fail using default medium resource_class
    resource_class: large
    steps:
      - buildout
      - run:
          name: NPM and non BDD tests
          command: |
            npm test
            pytest -v -v --timeout=400 -m "not bdd"
  bdd-tests:
    executor: snovault-executor
    resource_class: large
    steps:
      - buildout
      # orb dependencies
      - run: sudo apt-get update -y && sudo apt-get install -y libgbm1
      # Use install tasks from the orb
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Run bdd tests
          command: |
            pytest -v -v --timeout=400 -m "bdd" --tb=short \
              --splinter-implicit-wait 10 \
              --splinter-webdriver chrome \
              --splinter-socket-timeout 300 \
              --chrome-options "--headless --disable-gpu --no-sandbox --disable-dev-shm-usage --disable-extensions --whitelisted-ips --window-size=1920,1080"
          no_output_timeout: 30m
  pypi_description:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/snovault
    steps:
      - checkout
      - run:
          name: Install twine
          command: sudo pip install -U setuptools twine==3.3.0
      - run:
          name: Check package with twine
          command: |
            python setup.py sdist
            twine check dist/*
  release_to_pypi:
    docker:
      - image: circleci/python:3.7.3-stretch
    working_directory: ~/snovault
    steps:
      - checkout
      - run:
          name: Install release requirements
          command: sudo pip install -U setuptools twine==3.3.0
      - run:
          name: Run release
          command: |
            VERSION=$(awk -F '=' '/^VERSION/{print $2}' setup.py | tr -d ' "'\')
            if [ "${VERSION}" != "${CIRCLE_TAG}" ]; then
              echo "Version ${VERSION} in setup.py not equal to git tag ${CIRCLE_TAG}"
              exit 1
            fi
            python setup.py sdist
            twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" dist/*


workflows:
  version: 2
  snovault-tests:
    jobs:
      - bdd-tests
      - npm-non-bdd-tests
      - pypi_description:
          filters:
            tags:
              only: /.*/
      - release_to_pypi:
          requires:
            - pypi_description
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                # From https://www.python.org/dev/peps/pep-0440/
                # Only publish tags with PEP-440 compliant version specifiers to PyPI
                - /^([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$/
