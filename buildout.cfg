[buildout]
extensions =
    mr.developer
extends = versions.cfg
# XXX https://bitbucket.org/pypa/setuptools/issue/133/find-links-should-override-allow-hosts
allow-hosts =
    pypi.org
    files.pythonhosted.org
    github.com
find-links =
show-picked-versions = true
update-versions-file = versions.cfg
parts =
    snovault
    production-ini
    production
    production-indexer
    ckeditor
    npm-install
    compile-js
    compile-css
    test
    aws-ip-ranges
develop = .
sources-dir = develop
auto-checkout =

[sources]
behave = git https://github.com/behave/behave.git
behaving = git https://github.com/ggozad/behaving.git
jsonschema = git https://github.com/lrowe/jsonschema_serialize_fork.git
subprocess_middleware = git https://github.com/lrowe/subprocess_middleware.git
subprocess-middleware-node = git https://github.com/lrowe/subprocess-middleware-node.git egg=false
pyramid = git https://github.com/Pylons/pyramid.git
pyramid_multiauth = git https://github.com/mozilla-services/pyramid_multiauth.git
pytest = hg https://bitbucket.org/hpk42/pytest
rdflib = git https://github.com/lrowe/rdflib.git branch=patch-1
rdflib-jsonld = git https://github.com/lrowe/rdflib-jsonld.git branch=patch-1
jsonform = git https://github.com/lrowe/jsonform.git egg=false
webtest = git https://github.com/Pylons/webtest.git
WSGIProxy2 = git https://github.com/lrowe/WSGIProxy2.git
zope.sqlalchemy = git https://github.com/zopefoundation/zope.sqlalchemy.git
pytest-bdd = git https://github.com/lrowe/pytest-bdd.git branch=allow-any-step-order

[versions]
# Hand set versions
elasticsearch = 7.9.1

[snovault]
recipe = zc.recipe.egg
eggs =
    SPARQLWrapper
    snovault
    pyramid
    waitress
    psycopg2
    repoze.debug
    rutter
    pyramid_translogger
    redis

interpreter = py

[production-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/production.ini.in
output = ${buildout:directory}/production.ini
accession_factory = snowflakes.server_defaults.test_accession
file_upload_bucket = snowflakes-files-dev
blob_bucket = snovault-blobs-dev
indexer_processes =

[production]
recipe = collective.recipe.modwsgi
eggs =
    snovault
    psycopg2
config-file = ${buildout:directory}/production.ini

[production-indexer]
<= production
app_name = indexer

[ckeditor]
recipe = collective.recipe.cmd
on_install = true
on_update = true
# See http://stackoverflow.com/a/23108309/199100
#TODO consider moving this to snovault-build
cmds =
    curl https://s3-us-west-1.amazonaws.com/encoded-build/ckeditor/ckeditor_4.5.5_standard.zip | bsdtar -xf- -C src/snowflakes/static/build/

[aws-ip-ranges]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o aws-ip-ranges.json https://ip-ranges.amazonaws.com/ip-ranges.json

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm install

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build

[compile-css]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = compass compile

[test]
recipe = zc.recipe.egg
eggs =
    coverage
    snovault[test]
    psycopg2
    pytest
    pytest-timeout
    pytest-instafail
    pytest-cov
    pytest-bdd
    redis
scripts =
    coverage
    py.test=test
    pytest-bdd

# Avoid ``Unix-domain socket path "..." is too long (maximum 103 bytes)``
initialization = import tempfile; tempfile.tempdir = '/tmp'

